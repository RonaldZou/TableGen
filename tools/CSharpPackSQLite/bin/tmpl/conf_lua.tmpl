--<summary>
--Generated from @(Model.ExcelName)
@for (var i = 0; i < Model.SheetColumns; i++){@: --@Model.AttributeTypes[@i]  @Model.AttributeNames[@i]
}
--</summary>

local array = nil
local bReadAll = false
local sortedArray = nil
local Conf@(Model.TableName) = {}

function Conf@(Model.TableName).AddItem(db)
    return {
    @for (var i = 0; i < Model.SheetColumns; i++){
    if ( @Model.AttributeValues[@i] < 20 )
    {
    
		@:@Model.AttributeNames[@i] = Config.GetData(db[@(i+1)], @Model.AttributeValues[@i]),
    }
	else if(@Model.AttributeValues[@i] < 40)
	{
	    @:@Model.AttributeNames[@i] = Config.GetArrData(db[@(i+1)], @Model.AttributeValues[@i]),
	}
	else
    {
       	@:@Model.AttributeNames[@i] = Config.Get2ArrData(db[@(i+1)], @Model.AttributeValues[@i]),
    }
    }
    }
end

function Conf@(Model.TableName).Get(id)
    if array == nil then
        array = {}
    end
    if array[id] == nil then
       local data = DB.GetData("Conf@(Model.TableName)", id)
       if data ~= nil then
          array[id] = Conf@(Model.TableName).AddItem(data)
       end
    end
    return array[id]
end

function Conf@(Model.TableName).GetFirstCondition(filename, filevalue)
    if sortedArray == nil then
        sortedArray = {}
    end

    for i,v in pairs(sortedArray) do
        if v[filename] == filevalue then
            return v
        end
    end

    local data = Conf@(Model.TableName).GetAllConditions(filename, filevalue)
    if data ~= nil and #data >= 1 then
       return data[1]
    end
    return nil
end

--search from db
function Conf@(Model.TableName).GetAllConditions(filename, filevalue)
    local datas = DB.GetDataCondition("Conf@(Model.TableName)", filename, filevalue)

    if datas == nil then
        return nil
    end

    if array == nil then
        array = {}
    end

    local info
    local infos = {}
    for i = 1, #datas do
        info = Conf@(Model.TableName).AddItem(datas[i])
        array[info.sn] = info
        infos[#infos + 1] = info
    end
    return infos
end

function Conf@(Model.TableName).GetAll()
    if bReadAll then
        return array
    end
    bReadAll = true

    if array == nil then
        array = {}
    end
    sortedArray = {}

    local arr = DB.GetTable("Conf@(Model.TableName)")
    local info
    for i = 1, #arr do
        info = Conf@(Model.TableName).AddItem(arr[i])
        array[info.sn] = info
        sortedArray[i] = info
    end
    return array
end

function Conf@(Model.TableName).GetSortedAll()
    if nil == sortedArray then
        Conf@(Model.TableName).GetAll()
    end
    return sortedArray
end

function Conf@(Model.TableName).GetByLine(line)
    return Conf@(Model.TableName).GetSortedAll()[line]
end

function Conf@(Model.TableName).GetLineCount()
    return DB.GetRowCountInTable("Conf@(Model.TableName)")
end

return Conf@(Model.TableName)